#!/bin/bash
#
# Setup GHC environment to build Ganeti

set -euo pipefail

SCRIPT_DIR=$(dirname $(readlink -f $0))

CACHE_DIR="${SCRIPT_DIR}/cache"
GHC_PREFIX="${HOME}/local"
if [[ ${EUID:-${UID}} = 0 ]]; then
    GHC_PREFIX="/usr/local"
fi

# Setup cache directory
if [[ ! -d "${CACHE_DIR}" ]]; then
    mkdir -p "${CACHE_DIR}"
fi

# Install dependencies
if [[ -f /usr/bin/dnf ]]; then
    # el8 or later
    sudo dnf -y install libcurl-devel pcre-devel zlib-devel gmp-devel ncurses-compat-libs
else
    sudo yum -y install libcurl-devel pcre-devel zlib-devel gmp-devel
fi

TMP_DIR=$(mktemp -d "${HOME}/tmp.XXXXXXXXXX")

# Install ghc
# Ubuntu 20.04.01 LTS + initial: 8.6.5
# Ubuntu 20.04.01 LTS + apt upgrade: 8.8.1
#
# NG: GHC_VERSION=8.8.4
# Error:
# + cabal install cryptonite -f -use_target_attributes
# cabal: Error: Could not find module: AutoConf with any suffix:
# ["gc","chs","hsc","x","y","ly","cpphs","hs","lhs","hsig","lhsig"]. If the
# module is autogenerated it should be added to 'autogen-modules'.
GHC_VERSION=8.6.5
if ! type ghc > /dev/null 2>&1; then
    GHC_BINARY_PACKAGE="ghc-${GHC_VERSION}-x86_64-centos7-linux.tar.xz"
    if [[ ! -f "${CACHE_DIR}/${GHC_BINARY_PACKAGE}" ]]; then
        curl -L "https://downloads.haskell.org/~ghc/${GHC_VERSION}/{${GHC_BINARY_PACKAGE}}" -o "${CACHE_DIR}/#1"
    fi
    cp -a "${CACHE_DIR}/${GHC_BINARY_PACKAGE}" "${TMP_DIR}/"
    pushd "${TMP_DIR}"
    tar xf "${GHC_BINARY_PACKAGE}"
    cd "ghc-${GHC_VERSION}"
    ./configure --prefix="${GHC_PREFIX}"
    make install
    popd
fi

# Install cabal-install
if ! type cabal > /dev/null 2>&1; then
    # Cabal-3.0.1.0 -> 3.0.0.0
    CABAL_VERSION=$(ghc-pkg list Cabal | grep Cabal- | head -1 | egrep -o "\-[0-9].[0-9]" | cut -d'-' -f 2).0.0
    CABAL_BINARY_PACKAGE="cabal-install-${CABAL_VERSION}-x86_64-unknown-linux.tar.gz"
    if [[ ! -f "${CACHE_DIR}/${CABAL_BINARY_PACKAGE}" ]]; then
        curl -L "https://downloads.haskell.org/~cabal/cabal-install-${CABAL_VERSION}/{${CABAL_BINARY_PACKAGE}}" -o "${CACHE_DIR}/#1"
    fi
    cp -a "${CACHE_DIR}/${CABAL_BINARY_PACKAGE}" "${TMP_DIR}/" 
    pushd "${TMP_DIR}"
    tar xf "${CABAL_BINARY_PACKAGE}"
    rm -f cabal.sig
    mkdir -p "${GHC_PREFIX}/bin"
    mv cabal "${GHC_PREFIX}/bin/"
    cabal update
    popd
fi

